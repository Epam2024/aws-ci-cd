version: 0.2

phases:
  pre_build:
    commands:
      - echo "Starting pre-build phase..."
      - mvn clean install
      - echo "Logging in to Amazon ECR..."
      - aws --version
      - REPOSITORY_URI=246246898030.dkr.ecr.us-east-1.amazonaws.com/sprint-boot-app:latest
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin $REPOSITORY_URI
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
      - echo "Image tag set to $IMAGE_TAG"

  build:
    commands:
      - echo "Build started on `date`"
      - echo "Building the Docker image..."
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG

  post_build:
    commands:
      - echo "Build completed on `date`"
      - echo "Pushing the Docker images to ECR..."
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo "Creating imagedefinitions.json file for ECS..."
      - printf '[{"name":"sprint-boot-app","imageUri":"%s"}]' "$REPOSITORY_URI:$IMAGE_TAG" > imagedefinitions.json
      - echo "Printing contents of imagedefinitions.json:"
      - cat imagedefinitions.json

artifacts:
  files:
    - imagedefinitions.json
    - target/api-service-0.0.1-SNAPSHOT.jar
